# StatefulSet - Name: redis-cluster
# Replicas: 6
# Pods status: Running (All 6 replicas)
# Image: redis:5.0.1-alpine

# container name: redis, command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
# Env: name: 'POD_IP', valueFrom: 'fieldRef', fieldPath: 'status.podIP' (apiVersion: v1)
# Ports - name: 'client', containerPort: '6379'
# Ports - name: 'gossip', containerPort: '16379'

# Volume Mount - name: 'conf', mountPath: '/conf', readOnly:'false' (ConfigMap Mount)
# Volume Mount - name: 'conf', mountPath: '/conf', defaultMode = '0755' (ConfigMap Mount)
# Volume Mount - name: 'data', mountPath: '/data', readOnly:'false' (volumeClaim)

# volumes - name: 'conf', Type: 'ConfigMap', ConfigMap Name: 'redis-cluster-configmap',
# volumeClaimTemplates - name: 'data'
# volumeClaimTemplates - accessModes: 'ReadWriteOnce'
# volumeClaimTemplates - Storage Request: '1Gi'


apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
spec:
  selector:
    matchLabels:
      app: redis-cluster
  serviceName: redis-cluster
  replicas: 6
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
      - name: redis
        image: redis:5.0.1-alpine
        command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: client
          containerPort: 6379
        - name: gossip
          containerPort: 16379
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false
        - name: data
          mountPath: /data            
          readOnly: false
      volumes:
      - name: conf
        configMap:
          name: redis-cluster-configmap
          defaultMode: 0755          
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi        


